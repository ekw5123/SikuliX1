import org.junit.BeforeClass;
import org.sikuli.ide.SikulixIDE;
import org.junit.Test;
import org.sikuli.support.Commons;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.*;

public class AlreadyOpenTests extends SikulixIDE{
    private static SikulixIDE ide;
    private static List<PaneContext> contexts;

    @BeforeClass
    public static void setUp() {
        SikulixIDE.start();
        ide = SikulixIDE.get();
        contexts = new ArrayList<>();
        Commons.setTempFolder();
    }

    public static class PaneContext {
        File file;
        File folder;
        int pos;

        PaneContext(File file, File folder, int pos) {
            this.file = file;
            this.folder = folder;
            this.pos = pos;
        }
    }

    @Test
    public void testAlreadyOpenFileFound() {
        File testFile = new File("testFile.txt");
        contexts.add(new PaneContext(testFile, null, 0));

        assertEquals("Returns the position of the file.", 0, ide.alreadyOpen(testFile));
    }

    @Test
    public void testAlreadyOpen_FileNotFound() {
        File testFile = new File("testFile.txt");
        File testFolder = new File("testFolder");

        contexts.add(new PaneContext(new File("otherFile.txt"), null, 0));

        assertEquals("Returns -1 when file is not found.", -1, ide.alreadyOpen(testFile));
    }
}
